name: Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    paths:
      - "**.go"
      - ".github/workflows/*.yml"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v2
        with:
          go-version: "1.15"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Install goimpirts
        run: go get -u golang.org/x/tools/cmd/goimports

      - name: Install golint
        run: go get -u golang.org/x/lint/golint

      - name: Install misspell
        run: go get -u github.com/client9/misspell/cmd/misspell

      - name: Install ineffassign
        run: go get -u github.com/gordonklaus/ineffassign

      - name: Run goimports
        run: diff <(goimports -d .) <(printf "")

      - name: Run golint
        run: diff <(golint ./...) <(printf "")

      - name: Run gofmt
        run: diff <(gofmt -s -d .) <(printf "")

      - name: Run misspell
        run: misspell -error .

      - name: Run ineffassign
        run: ineffassign ./*.go

  go1_14:
    name: go:1.14
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.14
        uses: actions/setup-go@v2
        with:
          go-version: "1.14"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build
        run: go build -v .

      - name: Test
        run: go test -v .

  go1_15:
    name: go:1.15
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v2
        with:
          go-version: "1.15"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build
        run: go build -v .

      - name: Test
        run: go test -v . -race -coverprofile=coverage.txt -covermode=atomic

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt

  notification:
    if: always()
    name: Notification
    runs-on: ubuntu-latest
    needs:
      - go1_14
      - go1_15
    steps:
      - name: Slack Workflow Notification
        uses: Gamesight/slack-workflow-status@master
        with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.SLACK_WEBHOOK_URL}}
